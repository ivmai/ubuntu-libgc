From: Ivan Maidanski <ivmai@mail.ru>
Date: Thu, 24 Nov 2016 18:09:27 +0100
Subject: Fix GC_collect_or_expand to prevent allocation size value wrap-around

(Cherry-pick commit 1f3c938 from 'release-7_4' branch.)

Relates to issue #135 on Github.

* alloc.c (GC_WORD_MAX): New macro.
* alloc.c (GC_collect_or_expand): Limit blocks_to_get by
GC_WORD_MAX / HBLKSIZE value (to avoid multiplication overflow in
GC_expand_hp_inner).

Origin: backport, https://github.com/ivmai/bdwgc/commit/949a7533d47e0ce0976e2d7aa3daa3bf9f31cabd
Bug: https://github.com/ivmai/bdwgc/issues/135
Bug-Debian: https://bugs.debian.org/844771
---
 alloc.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/alloc.c b/alloc.c
index eb3c4a3..0357b38 100644
--- a/alloc.c
+++ b/alloc.c
@@ -978,6 +978,8 @@ unsigned GC_fail_count = 0;
 			/* How many consecutive GC/expansion failures?	*/
 			/* Reset by GC_allochblk.			*/
 
+#define GC_WORD_MAX (~(word)0)
+
 GC_bool GC_collect_or_expand(word needed_blocks, GC_bool ignore_off_page)
 {
     if (!GC_incremental && !GC_dont_gc &&
@@ -1004,6 +1006,8 @@ GC_bool GC_collect_or_expand(word needed_blocks, GC_bool ignore_off_page)
           } else {
               blocks_to_get = MAXHINCR;
           }
+	  if (blocks_to_get > divHBLKSZ(GC_WORD_MAX))
+	      blocks_to_get = divHBLKSZ(GC_WORD_MAX);
       }
       if (!GC_expand_hp_inner(blocks_to_get)
         && !GC_expand_hp_inner(needed_blocks)) {
