--- a/include/private/gc_priv.h
+++ b/include/private/gc_priv.h
@@ -166,6 +166,14 @@ typedef int GC_bool;
 # define REGISTER register
 #endif
 
+#if defined(M68K) && defined(__GNUC__)
+  /* By default, __alignof__(word) is 2 on m68k.  Use this attribute to */
+  /* have proper word alignment (i.e. 4-byte on a 32-bit arch).         */
+# define GC_ATTR_WORD_ALIGNED __attribute__((__aligned__(sizeof(word))))
+#else
+# define GC_ATTR_WORD_ALIGNED /* empty */
+#endif
+
 #ifndef HEADERS_H
 # include "gc_hdrs.h"
 #endif
--- a/include/private/pthread_support.h
+++ b/include/private/pthread_support.h
@@ -132,7 +132,7 @@ typedef struct GC_Thread_Rep {
                                 /* and detach.                          */
 
 #   ifdef THREAD_LOCAL_ALLOC
-        struct thread_local_freelists tlfs;
+        struct thread_local_freelists tlfs GC_ATTR_WORD_ALIGNED;
 #   endif
 } * GC_thread;
 
